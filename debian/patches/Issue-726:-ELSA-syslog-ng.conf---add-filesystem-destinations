Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-elsa-extras (20131117-1ubuntu0securityonion84) precise; urgency=low
 .
   * Issue 726: ELSA syslog-ng.conf - add filesystem destinations
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ securityonion-elsa-extras-20131117/contrib/securityonion-syslog-ng-local.conf
@@ -0,0 +1,133 @@
+# Bring it all back
+#source s_src {
+#       system();
+#       internal();
+#};
+########################
+# Destinations
+########################
+# First some standard logfile
+#
+destination d_auth { file("/var/log/auth.log"); };
+destination d_cron { file("/var/log/cron.log"); };
+destination d_daemon { file("/var/log/daemon.log"); };
+destination d_kern { file("/var/log/kern.log"); };
+destination d_lpr { file("/var/log/lpr.log"); };
+destination d_mail { file("/var/log/mail.log"); };
+destination d_syslog { file("/var/log/syslog"); };
+destination d_user { file("/var/log/user.log"); };
+destination d_uucp { file("/var/log/uucp.log"); };
+
+# This files are the log come from the mail subsystem.
+#
+destination d_mailinfo { file("/var/log/mail/mail.info"); };
+destination d_mailwarn { file("/var/log/mail/mail.warn"); };
+destination d_mailerr { file("/var/log/mail/mail.err"); };
+
+# Logging for INN news system
+#
+destination d_newscrit { file("/var/log/news/news.crit"); };
+destination d_newserr { file("/var/log/news/news.err"); };
+destination d_newsnotice { file("/var/log/news/news.notice"); };
+
+# Some `catch-all' logfiles.
+#
+destination d_debug { file("/var/log/debug"); };
+destination d_error { file("/var/log/error"); };
+destination d_messages { file("/var/log/messages"); };
+
+# The root's console.
+#
+destination d_console { usertty("root"); };
+
+# Virtual console.
+#
+destination d_console_all { file("/dev/tty10"); };
+
+# The named pipe /dev/xconsole is for the nsole' utility.  To use it,
+# you must invoke nsole' with the -file' option:
+#
+#    $ xconsole -file /dev/xconsole [...]
+#
+destination d_xconsole { pipe("/dev/xconsole"); };
+
+# Send the messages to an other host
+#
+#destination d_net { tcp("127.0.0.1" port(1000) authentication(on) encrypt(on) log_fifo_size(1000)); };
+
+# Debian only
+destination d_ppp { file("/var/log/ppp.log"); };
+
+########################
+# Filters
+########################
+# Here's come the filter options. With this rules, we can set which
+# message go where.
+
+filter f_dbg { level(debug); };
+filter f_info { level(info); };
+filter f_notice { level(notice); };
+filter f_warn { level(warn); };
+filter f_err { level(err); };
+filter f_crit { level(crit .. emerg); };
+
+filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
+filter f_error { level(err .. emerg) and not filter(f_snort); };
+filter f_messages { level(info,notice,warn) and not facility(auth,authpriv,cron,daemon,mail,news); };
+filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
+filter f_cron { facility(cron) and not filter(f_debug); };
+filter f_daemon { facility(daemon) and not filter(f_debug); };
+filter f_kern { facility(kern) and not filter(f_debug); };
+filter f_lpr { facility(lpr) and not filter(f_debug); };
+filter f_local { facility(local0, local1, local3, local4, local5, local6, local7) and not filter(f_debug); };
+filter f_mail { facility(mail) and not filter(f_debug); };
+filter f_news { facility(news) and not filter(f_debug); };
+filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug) and not filter(f_snort); };
+filter f_user { facility(user) and not filter(f_debug); };
+filter f_uucp { facility(uucp) and not filter(f_debug); };
+
+filter f_cnews { level(notice, err, crit) and facility(news); };
+filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };
+
+filter f_ppp { facility(local2) and not filter(f_debug); };
+filter f_console { level(warn .. emerg); };
+
+########################
+# Log paths
+########################
+log { source(s_syslog); filter(f_auth); destination(d_auth); };
+log { source(s_syslog); filter(f_cron); destination(d_cron); };
+log { source(s_syslog); filter(f_daemon); destination(d_daemon); };
+log { source(s_syslog); filter(f_kern); destination(d_kern); };
+log { source(s_syslog); filter(f_lpr); destination(d_lpr); };
+log { source(s_syslog); filter(f_syslog3); destination(d_syslog); };
+log { source(s_syslog); filter(f_user); destination(d_user); };
+log { source(s_syslog); filter(f_uucp); destination(d_uucp); };
+
+log { source(s_syslog); filter(f_mail); destination(d_mail); };
+#log { source(s_syslog); filter(f_mail); filter(f_info); destination(d_mailinfo); };
+#log { source(s_syslog); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
+#log { source(s_syslog); filter(f_mail); filter(f_err); destination(d_mailerr); };
+
+log { source(s_syslog); filter(f_news); filter(f_crit); destination(d_newscrit); };
+log { source(s_syslog); filter(f_news); filter(f_err); destination(d_newserr); };
+log { source(s_syslog); filter(f_news); filter(f_notice); destination(d_newsnotice); };
+#log { source(s_syslog); filter(f_cnews); destination(d_console_all); };
+#log { source(s_syslog); filter(f_cother); destination(d_console_all); };
+
+#log { source(s_syslog); filter(f_ppp); destination(d_ppp); };
+
+log { source(s_syslog); filter(f_debug); destination(d_debug); };
+log { source(s_syslog); filter(f_error); destination(d_error); };
+log { source(s_syslog); filter(f_messages); destination(d_messages); };
+
+log { source(s_syslog); filter(f_console); destination(d_console_all); destination(d_xconsole); };
+log { source(s_syslog); filter(f_crit); destination(d_console); };
+
+# All messages send to a remote site
+#
+#log { source(s_syslog); destination(d_net); };
+
+###
+# Include all config files in /etc/syslog-ng/conf.d/
+###
--- securityonion-elsa-extras-20131117.orig/contrib/securityonion-syslog-ng.conf
+++ securityonion-elsa-extras-20131117/contrib/securityonion-syslog-ng.conf
@@ -88,3 +88,136 @@ log {
 	log { filter(f_bro_headers); flags(final); };
 	log { destination(d_elsa); };
 };
+# Bring it all back
+#source s_src {
+#       system();
+#       internal();
+#};
+########################
+# Destinations
+########################
+# First some standard logfile
+#
+destination d_auth { file("/var/log/auth.log"); };
+destination d_cron { file("/var/log/cron.log"); };
+destination d_daemon { file("/var/log/daemon.log"); };
+destination d_kern { file("/var/log/kern.log"); };
+destination d_lpr { file("/var/log/lpr.log"); };
+destination d_mail { file("/var/log/mail.log"); };
+destination d_syslog { file("/var/log/syslog"); };
+destination d_user { file("/var/log/user.log"); };
+destination d_uucp { file("/var/log/uucp.log"); };
+
+# This files are the log come from the mail subsystem.
+#
+destination d_mailinfo { file("/var/log/mail/mail.info"); };
+destination d_mailwarn { file("/var/log/mail/mail.warn"); };
+destination d_mailerr { file("/var/log/mail/mail.err"); };
+
+# Logging for INN news system
+#
+destination d_newscrit { file("/var/log/news/news.crit"); };
+destination d_newserr { file("/var/log/news/news.err"); };
+destination d_newsnotice { file("/var/log/news/news.notice"); };
+
+# Some `catch-all' logfiles.
+#
+destination d_debug { file("/var/log/debug"); };
+destination d_error { file("/var/log/error"); };
+destination d_messages { file("/var/log/messages"); };
+
+# The root's console.
+#
+destination d_console { usertty("root"); };
+
+# Virtual console.
+#
+destination d_console_all { file("/dev/tty10"); };
+
+# The named pipe /dev/xconsole is for the nsole' utility.  To use it,
+# you must invoke nsole' with the -file' option:
+#
+#    $ xconsole -file /dev/xconsole [...]
+#
+destination d_xconsole { pipe("/dev/xconsole"); };
+
+# Send the messages to an other host
+#
+#destination d_net { tcp("127.0.0.1" port(1000) authentication(on) encrypt(on) log_fifo_size(1000)); };
+
+# Debian only
+destination d_ppp { file("/var/log/ppp.log"); };
+
+########################
+# Filters
+########################
+# Here's come the filter options. With this rules, we can set which
+# message go where.
+
+filter f_dbg { level(debug); };
+filter f_info { level(info); };
+filter f_notice { level(notice); };
+filter f_warn { level(warn); };
+filter f_err { level(err); };
+filter f_crit { level(crit .. emerg); };
+
+filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
+filter f_error { level(err .. emerg) and not filter(f_snort); };
+filter f_messages { level(info,notice,warn) and not facility(auth,authpriv,cron,daemon,mail,news); };
+filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
+filter f_cron { facility(cron) and not filter(f_debug); };
+filter f_daemon { facility(daemon) and not filter(f_debug); };
+filter f_kern { facility(kern) and not filter(f_debug); };
+filter f_lpr { facility(lpr) and not filter(f_debug); };
+filter f_local { facility(local0, local1, local3, local4, local5, local6, local7) and not filter(f_debug); };
+filter f_mail { facility(mail) and not filter(f_debug); };
+filter f_news { facility(news) and not filter(f_debug); };
+filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug) and not filter(f_snort); };
+filter f_user { facility(user) and not filter(f_debug); };
+filter f_uucp { facility(uucp) and not filter(f_debug); };
+
+filter f_cnews { level(notice, err, crit) and facility(news); };
+filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };
+
+filter f_ppp { facility(local2) and not filter(f_debug); };
+filter f_console { level(warn .. emerg); };
+
+########################
+# Log paths
+########################
+log { source(s_syslog); filter(f_auth); destination(d_auth); };
+log { source(s_syslog); filter(f_cron); destination(d_cron); };
+log { source(s_syslog); filter(f_daemon); destination(d_daemon); };
+log { source(s_syslog); filter(f_kern); destination(d_kern); };
+log { source(s_syslog); filter(f_lpr); destination(d_lpr); };
+log { source(s_syslog); filter(f_syslog3); destination(d_syslog); };
+log { source(s_syslog); filter(f_user); destination(d_user); };
+log { source(s_syslog); filter(f_uucp); destination(d_uucp); };
+
+log { source(s_syslog); filter(f_mail); destination(d_mail); };
+#log { source(s_syslog); filter(f_mail); filter(f_info); destination(d_mailinfo); };
+#log { source(s_syslog); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
+#log { source(s_syslog); filter(f_mail); filter(f_err); destination(d_mailerr); };
+
+log { source(s_syslog); filter(f_news); filter(f_crit); destination(d_newscrit); };
+log { source(s_syslog); filter(f_news); filter(f_err); destination(d_newserr); };
+log { source(s_syslog); filter(f_news); filter(f_notice); destination(d_newsnotice); };
+#log { source(s_syslog); filter(f_cnews); destination(d_console_all); };
+#log { source(s_syslog); filter(f_cother); destination(d_console_all); };
+
+#log { source(s_syslog); filter(f_ppp); destination(d_ppp); };
+
+log { source(s_syslog); filter(f_debug); destination(d_debug); };
+log { source(s_syslog); filter(f_error); destination(d_error); };
+log { source(s_syslog); filter(f_messages); destination(d_messages); };
+
+log { source(s_syslog); filter(f_console); destination(d_console_all); destination(d_xconsole); };
+log { source(s_syslog); filter(f_crit); destination(d_console); };
+
+# All messages send to a remote site
+#
+#log { source(s_syslog); destination(d_net); };
+
+###
+# Include all config files in /etc/syslog-ng/conf.d/
+###
